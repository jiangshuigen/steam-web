<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.LuckyBoxMapper">

    <select id="getTypeList" resultType="com.example.demo.entity.AwardTypes">
        select
            id,
            `name`,
            cover,
            IFNULL(uu_type_id,0) as uuTypeId,
            IFNULL(uu_weapon_id,0) as uuWeaponId,
            sort
         from award_types order  by  sort
    </select>
    <select id="getTypeById" resultType="com.example.demo.entity.AwardTypes">
        select
         id,
            `name`,
            cover,
            IFNULL(uu_type_id,0) as uuTypeId,
            IFNULL(uu_weapon_id,0) as uuWeaponId,
            sort
         from award_types where id =#{id} limit 1
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from award_types where id =#{id}
    </delete>
    <update id="updateType" parameterType="com.example.demo.entity.AwardTypes">
        update award_types
        <set>
            <if test="name !=null and name != '' ">
                `name` = #{name},
            </if>
            <if test="cover!=null and cover!=''">
                cover =#{cover},
            </if>
            <if test="sort >0">
                sort =#{sort},
            </if>
            <if test="uuTypeId >0">
                uu_type_id =#{uuTypeId},
            </if>
            <if test="sort >0">
                uu_weapon_id =#{uuWeaponId},
            </if>
        </set>
        <where>
            id =#{id}
        </where>
    </update>
    <insert id="saveType" parameterType="com.example.demo.entity.AwardTypes">
        insert into award_types(
                `name`,
                cover,
                sort,
                uu_type_id,
                uu_weapon_id
        )values(
              #{name},
              #{cover},
              #{sort},
              #{uuTypeId},
              #{uuWeaponId}
        )
    </insert>

    <select id="getAwardList" resultType="com.example.demo.entity.BoxAwards"
            parameterType="com.example.demo.dto.BoxAwardsQuery">
        select id,
        box_id as boxId,
        `name`,
        hash_name as hashName,
        cover,
        odds,
        real_odds as realOdds,
        anchor_odds as anchorOdds,
        luck_odds as luckOdds,
        game_odds as gameOdds,
        game_anchor_odds as gameAnchorOdds,
        dura,
        lv,
        bean,
        max_t as maxT,
        `type`,

        IFNULL(real_odds_leave,real_odds) as realOddsLeave,
        IFNULL(anchor_odds_leave,anchor_odds) as anchorOddsLeave,
        IFNULL(luck_odds_leave,luck_odds) as luckOddsLeave,

        is_lucky_box as isLuckyBox,
        luck_interval as luckInterval,
        luck_interval_anchor as luckIntervalAnchor,
        is_game as isGame,
        is_shop as isShop,
        is_synthesis as isSynthesis,
        clear_lucky as clearLucky,
        shop_inventory as shopInventory,
        created_at as createdAt,
        updated_at as updatedAt
        from box_awards
        <where>
            <if test="name !=null and name !=''">
                and `name` like "%"#{name}"%"
            </if>
            <if test="boxId>0">
                and box_id= #{boxId}
            </if>
        </where>
        order by created_at desc
    </select>

    <select id="getSellAwardList" resultType="com.example.demo.dto.UUawardsDto"
            parameterType="com.example.demo.dto.UUawardsQuery">
        select id,
        item_id as itemId,
        `name`,
        item_name as itemName,
        market_hash_name as marketHashName,
        short_name as shortName,
        image_url as imageUrl,
        local_image_url as localImageUrl,
        dura,
        uu_type_id as uuTypeId,
        uu_weapon_id as uuWeaponId,
        bean,
        is_shop as isShop,
        is_battle as isBattle,
        created_at as createdAt,
        updated_at as updatedAt
        from steam_items_uu
        <where>
            bean > 0
            <if test="isShop>0">
                and is_shop >= #{isShop}
            </if>
            <if test="isBattle>0">
                and is_battle>= #{isBattle}
            </if>
            <if test="name !=null and name !=''">
                and `name` like "%"#{name}"%"
            </if>
            <if test="uuTypeId>0">
                and uu_type_id= #{uuTypeId}
            </if>
            <if test="uuWeaponId>0">
                and uu_weapon_id= #{uuWeaponId}
            </if>
            <if test="min>0">
                and bean >= #{min}
            </if>
            <if test="max>0">
                and bean <![CDATA[ <=]]>  #{max}
            </if>
        </where>
        order by bean
        <if test="sort>0">
            desc
        </if>
    </select>
    <select id="getSellAwardById" resultType="com.example.demo.dto.UUawardsDto">
          select id,
        item_id as itemId,
        `name`,
        item_name as itemName,
        market_hash_name as marketHashName,
        short_name as shortName,
        image_url as imageUrl,
        local_image_url as localImageUrl,
        dura,
        uu_type_id as uuTypeId,
        uu_weapon_id as uuWeaponId,
        bean,
        created_at as createdAt,
        updated_at as updatedAt
        from steam_items_uu
        where id =#{id}
        limit 1
    </select>

    <insert id="saveAward" parameterType="com.example.demo.dto.SaveAwardsDto">
          insert into box_awards(
            box_id,
            `name`,
            hash_name,
            cover,
            odds,
            real_odds,
            real_odds_leave,
            anchor_odds,
            anchor_odds_leave,
            luck_odds,
            luck_odds_leave,
            game_odds,
            game_anchor_odds,
            dura,
            lv,
            bean,
            max_t,
            `type`,
            is_lucky_box,
            is_shop,
            is_synthesis,
            clear_lucky,
            shop_inventory,
            created_at
          )
          select
          #{boxId},
          `name`,
          market_hash_name,
          image_url,
          #{odds},
          #{realOdds},
          0,
          #{anchorOdds},0,
          0,0,0,0,0,
          #{lv},
          bean,
          0,
          uu_type_id,
          #{isLuckyBox},
          0,0,0,999,
          now()
          from steam_items_uu
          where id = #{uId}
    </insert>
    <select id="getBoxAwardById" resultType="com.example.demo.entity.BoxAwards">
           select id,
        box_id as boxId,
        `name`,
        hash_name as hashName,
        cover,
        odds,
        real_odds as realOdds,
        anchor_odds as anchorOdds,
        luck_odds as luckOdds,
        game_odds as gameOdds,
        game_anchor_odds as gameAnchorOdds,
        dura,
        lv,
        bean,
        max_t as maxT,
        `type`,
        is_lucky_box as isLuckyBox,
        luck_interval as luckInterval,
        luck_interval_anchor as luckIntervalAnchor,
        is_game as isGame,
        is_shop as isShop,
        is_synthesis as isSynthesis,
        clear_lucky as clearLucky,
        shop_inventory as shopInventory,
        created_at as createdAt,
        updated_at as updatedAt
        from box_awards
        where id =#{awardId}
        limit 1
    </select>
    <select id="getWebAwardList" resultType="com.example.demo.entity.BoxAwards"
            parameterType="com.example.demo.dto.WebBoxAwardsQuery">
        select id,
        box_id as boxId,
        `name`,
        hash_name as hashName,
        cover,
        odds,
        real_odds as realOdds,
        anchor_odds as anchorOdds,
        luck_odds as luckOdds,
        game_odds as gameOdds,
        game_anchor_odds as gameAnchorOdds,
        dura,
        lv,
        bean,
        max_t as maxT,
        `type`,
        is_lucky_box as isLuckyBox,
        luck_interval as luckInterval,
        luck_interval_anchor as luckIntervalAnchor,
        is_game as isGame,
        is_shop as isShop,
        is_synthesis as isSynthesis,
        clear_lucky as clearLucky,
        shop_inventory as shopInventory,
        created_at as createdAt,
        updated_at as updatedAt
        from box_awards
        <where>
            <if test="name !=null and name !=''">
                and `name` like "%"#{name}"%"
            </if>
            <if test="type>0">
                and `type`= #{type}
            </if>
            <if test="min>0">
                and bean >= #{min}
            </if>
            <if test="max>0">
                and bean <![CDATA[ <=]]>  #{max}
            </if>
            and is_lucky_box = 1
            and (luck_interval is not NULL or luck_interval_anchor is not NULL )
        </where>
        order by bean
        <if test="sort>0">
            desc
        </if>
    </select>
    <select id="getBoxAwardList" resultType="com.example.demo.entity.BoxAwards">
        select id,

        real_odds as realOdds,
        anchor_odds as anchorOdds,
        luck_odds as luckOdds

        from box_awards
        where bean>0
    </select>
    <select id="getIndexBoxList" parameterType="java.lang.Integer" resultType="com.example.demo.entity.BoxAwards">
          select id,
        box_id as boxId,
        `name`,
        hash_name as hashName,
        cover,
        odds,
        real_odds as realOdds,
        anchor_odds as anchorOdds,
        luck_odds as luckOdds,

        IFNULL(real_odds_leave,real_odds) as realOddsLeave,
        IFNULL(anchor_odds_leave,anchor_odds) as anchorOddsLeave,
        IFNULL(luck_odds_leave,luck_odds) as luckOddsLeave,

        game_odds as gameOdds,
        game_anchor_odds as gameAnchorOdds,
        dura,
        lv,
        bean,
        max_t as maxT,
        `type`,
        is_lucky_box as isLuckyBox,
        luck_interval as luckInterval,
        luck_interval_anchor as luckIntervalAnchor,
        is_game as isGame,
        is_shop as isShop,
        is_synthesis as isSynthesis,
        clear_lucky as clearLucky,
        shop_inventory as shopInventory,
        created_at as createdAt,
        updated_at as updatedAt
        from box_awards
        where box_id =#{boxId}
        order by bean desc
    </select>
    <update id="updateAward" parameterType="com.example.demo.entity.BoxAwards">
        update box_awards
        <set>
            <if test="name !=null and name!=''">
                `name` = #{name},
            </if>
            <if test="cover !=null and cover!=''">
                cover = #{cover},
            </if>
            <if test="dura >0">
                dura = #{dura},
            </if>
            <if test="lv >0">
                lv = #{lv},
            </if>
            <if test="odds >0">
                odds = #{odds},
            </if>
            <if test="realOdds !=null">
                real_odds = #{realOdds},
            </if>
            <if test="luckOdds !=null">
                luck_odds = #{luckOdds},
            </if>

            <if test="anchorOdds !=null">
                anchor_odds = #{anchorOdds},
            </if>
            <if test="clearLucky >0">
                clear_lucky = #{clearLucky},
            </if>
            <if test="type >0">
                `type` = #{type},
            </if>
            <if test="luckInterval !=null and luckInterval !=''">
                luck_interval =#{luckInterval},
            </if>
            <if test="luckIntervalAnchor !=null and luckIntervalAnchor !=''">
                luck_interval_anchor =#{luckIntervalAnchor},
            </if>
            <if test="isLuckyBox != null ">
                is_lucky_box = #{isLuckyBox},
            </if>
            <if test="bean >0">
                bean = #{bean},
            </if>
            <if test="shopInventory >0">
                shop_inventory = #{shopInventory},
            </if>
            <if test="maxT >0">
                max_t = #{maxT},
            </if>
        </set>
        <where>
            id =#{id}
        </where>
    </update>
    <update id="updateAwardCount" parameterType="com.example.demo.dto.AwardCountDto">
        update box_awards
        <if test="type==1">
            set luck_odds_leave = #{numb}
        </if>
        <if test="type==2">
            set luck_odds_leave = #{numb}
        </if>
        <if test="type==3">
            set real_odds_leave = #{numb}
        </if>
        <if test="type==4">
            set anchor_odds_leave = #{numb}
        </if>
        <where>
            id = #{id}
        </where>
    </update>
</mapper>