<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserMapper">

    <resultMap id="userMap" type="com.example.demo.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" parameterType="com.example.demo.entity.User">
        insert into t_user (username, password)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
    </insert>

    <insert id="batchInsertUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (username, password) values
        <foreach item="item" collection="list" separator=",">
            (#{item.username}, #{item.password})
        </foreach>
    </insert>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete
        from t_user
        where id = #id
    </delete>

    <update id="webUpdateUser" parameterType="com.example.demo.dto.UserUpdateDto">
        update users
        <set>
            <if test="name!=null and name != ''">
                `name` =#{name},
            </if>
            <if test="avatar!=null">
                avatar =#{avatar},
            </if>
            <if test="inviterId>0">
                inviter_id =#{inviterId},
            </if>
            <if test="steamUrl!=null and steamUrl!=''">
                steam_url =#{steamUrl},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateUser" parameterType="com.example.demo.entity.User">
        update users
        <set>
            <if test="name!=null and name != ''">
                `name` =#{name},
            </if>
            <if test="inviteCode!=null and inviteCode != ''">
                invite_code =#{inviteCode},
            </if>
            <if test="bean!=null and bean != ''">
                bean =#{bean},
            </if>
            <if test="silver!=null">
                silver =#{silver},
            </if>
            <if test="closeGift!=null">
                close_gift =#{closeGift},
            </if>
            <if test="banPickUp!=null">
                ban_pick_up =#{banPickUp},
            </if>
            <if test="anchor!=null">
                anchor =#{anchor},
            </if>
            <if test="truePay!=null">
                total_recharge =#{truePay},
            </if>
            <if test="vipLevel>0">
                vip_level =#{vipLevel},
            </if>
            <if test="promotionLevel>0">
                promotion_level =#{promotionLevel},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="selectUser" parameterType="java.lang.Integer" resultMap="userMap">
        select *
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectAllUser" resultMap="userMap">
        select *
        from users limit 100
    </select>
    <!--sdmin首页统计-->
    <select id="getDashboard" resultType="com.example.demo.entity.Dashboard">
        select (select count(1) from users)                                              as userCount,
               (select sum(price) from bean_records where status = 1 and is_pay_api = 1) as amount,
               (select count(1) from box_records where status = 4)                       as applyCount,
               (select 0)                                                                as balance
        from dual
    </select>
    <select id="getUserListByPage" parameterType="com.example.demo.dto.UserQuery"
            resultType="com.example.demo.entity.User">
        select
        ua.id,
        ua.`name`,
        ua.mobile,
        ua.invite_code inviteCode,
        ua.avatar,
        ua.inviter_id inviterId,
        (select u.`name` from users u where u.id = ua.inviter_id) as inviterName,
        (SELECT SUM(re.bean) FROM `bean_records` as re WHERE re.user_id = ua.id AND re.`status` = '1') as truePay ,
        (SELECT SUM(res.bean) FROM `bean_records` as res WHERE res.inviter_id = ua.id AND res.`status` = '1') as
        subordinatePay,
        ua.be_invite_number beInviteNumber,
        ua.email_verified_at emailVerifiedAt,
        ua.bean,
        ua.silver,
        ua.integral,
        ua.steam_url steamUrl,
        ua.steam_id steamId,
        ua.password,
        ua.remember_token rememberToken,
        ua.promotion_level promotionLevel,
        ua.vip_level vipLevel,
        ua.is_recharge isRecharge,
        ua.total_recharge totalRecharge,
        ua.close_gift closeGift,
        ua.ban_pick_up banPickUp,
        ua.anchor,
        ua.new_welfare newWelfare,
        ua.box_key_total boxKeyTotal,
        ua.reward_new_user rewardNewUser,
        ua.is_adult isAdult,
        ua.real_name realName,
        ua.id_number idNumber,
        ua.set_invite_code_num setInviteCodeNum,
        ua.created_at createdAt,
        ua.updated_at updatedAt
        from users ua
        <where>
            <if test="id >0 ">
                and ua.id = #{id}
            </if>
            <if test="name !=null and name!='' ">
                and ua.`name` = #{name}
            </if>
            <if test="mobile !=null and mobile !=''">
                and ua.mobile = #{mobile}
            </if>
            <if test="inviteCode!= null and inviteCode !=''">
                and ua.invite_code = #{inviteCode}
            </if>
        </where>
    </select>
    <select id="getUserInfo" parameterType="java.lang.Integer" resultType="com.example.demo.dto.UserDto">
        select ua.id,
               ua.`name`,
               ua.mobile,
               ua.invite_code                                                 inviteCode,
               ua.inviter_id as inviterId,
                (select invite_code from  users u2 where u2.id = ua.inviter_id limit 1)as parentInviteCode,
               ua.avatar,
               ua.bean,
               ua.silver,
               ua.steam_url                                                   steamUrl,
               ua.vip_level                                                   vipLevel,
               anchor,
               ua.total_recharge                                           as totalRecharge,
               IFNULL((select v.threshold
                       from vip as v
                       where v.level = (ua.vip_level + 1) limit 1),999999) as nextVipLevelEXP,
               CONCAT(LEFT(ua.mobile,3), '****', RIGHT(ua.mobile,4))       AS mobileHide
        from users ua
        where ua.id = #{id} limit 1
    </select>

    <select id="queryUserInfo" resultType="com.example.demo.dto.UserDto" parameterType="com.example.demo.dto.LoginInfo">
        select
        ua.id,
        ua.`name`,
        ua.mobile,
        ua.invite_code inviteCode,
        ua.inviter_id as inviterId,
        ua.avatar,
        ua.anchor,
        bean,
        ifnull(ua.silver,0) silver,
        ua.password pwd,
        ua.steam_url steamUrl ,
        ua.vip_level vipLevel,
        ua.total_recharge as totalRecharge,
        CONCAT(LEFT(ua.mobile,3), '****' ,RIGHT(ua.mobile,4)) AS mobileHide
        from users ua
        <where>
            <if test="name!=null and name !=''">
                and ua.`name` =#{name}
            </if>
            <if test="mobile!=null and mobile !=''">
                and ua.mobile =#{mobile}
            </if>
        </where>
        limit 1
    </select>
    <select id="getUserById" resultType="com.example.demo.entity.User" parameterType="java.lang.Integer">
        select ua.id,
               ua.`name`,
               ua.mobile,
               CONCAT(LEFT(ua.mobile,3), '****', RIGHT(ua.mobile,4))     AS mobileHide,
               ua.invite_code                                               inviteCode,
               ua.avatar,
               ua.inviter_id                                                inviterId,
               (select u.`name` from users u where u.id = ua.inviter_id) as inviterName,
               ua.be_invite_number                                          beInviteNumber,
               ua.email_verified_at                                         emailVerifiedAt,
               ua.bean,
               ua.silver,
               ua.integral,
               ua.steam_url                                                 steamUrl,
               ua.steam_id                                                  steamId,
               ua.password,
               ua.remember_token                                            rememberToken,
               ua.promotion_level                                           promotionLevel,
               ua.vip_level                                                 vipLevel,
               ua.is_recharge                                               isRecharge,
               ua.total_recharge                                            totalRecharge,
               ua.close_gift                                                closeGift,
               ua.ban_pick_up                                               banPickUp,
               ua.anchor,
               ua.new_welfare                                               newWelfare,
               ua.box_key_total                                             boxKeyTotal,
               ua.reward_new_user                                           rewardNewUser,
               ua.is_adult                                                  isAdult,
               ua.real_name                                                 realName,
               ua.id_number                                                 idNumber,
               ua.set_invite_code_num                                       setInviteCodeNum,
               ua.created_at                                                createdAt,
               ua.updated_at                                                updatedAt
        from users ua
        where ua.id = #{id} limit 1
    </select>

    <select id="getIPList" parameterType="com.example.demo.dto.LoginIpLogQuery"
            resultType="com.example.demo.dto.LoginIpLog">
        select id,
               user_id    as userId,
               ip,
               created_at as createdAt,
               updated_at as updatedAt
        from login_ip_logs
        where user_id = #{userId}
    </select>

    <select id="queryUserByPhone" parameterType="java.lang.String" resultType="com.example.demo.entity.User">
        select ua.id,
               ua.`name`,
               ua.mobile,
               CONCAT(LEFT(ua.mobile,3), '****', RIGHT(ua.mobile,4)) AS mobileHide,
               ua.invite_code                                           inviteCode,
               ua.avatar,
               ua.inviter_id                                            inviterId,
               ua.be_invite_number                                      beInviteNumber,
               ua.email_verified_at                                     emailVerifiedAt,
               ua.bean,
               ua.silver,
               ua.integral,
               ua.steam_url                                             steamUrl,
               ua.steam_id                                              steamId,
               ua.password,
               ua.remember_token                                        rememberToken,
               ua.promotion_level                                       promotionLevel,
               ua.vip_level                                             vipLevel,
               ua.is_recharge                                           isRecharge,
               ua.total_recharge                                        totalRecharge,
               ua.close_gift                                            closeGift,
               ua.ban_pick_up                                           banPickUp,
               ua.anchor,
               ua.new_welfare                                           newWelfare,
               ua.box_key_total                                         boxKeyTotal,
               ua.reward_new_user                                       rewardNewUser,
               ua.is_adult                                              isAdult,
               ua.real_name                                             realName,
               ua.id_number                                             idNumber,
               ua.set_invite_code_num                                   setInviteCodeNum,
               ua.created_at                                            createdAt,
               ua.updated_at                                            updatedAt
        from users ua
        where ua.mobile = #{mobile}
    </select>
    <select id="queryUserByName" parameterType="java.lang.String" resultType="com.example.demo.entity.User">
        select ua.id,
               ua.`name`,
               ua.mobile,
               CONCAT(LEFT(ua.mobile,3), '****', RIGHT(ua.mobile,4)) AS mobileHide,
               ua.invite_code                                           inviteCode,
               ua.avatar,
               ua.inviter_id                                            inviterId,
               ua.be_invite_number                                      beInviteNumber,
               ua.email_verified_at                                     emailVerifiedAt,
               ua.bean,
               ua.silver,
               ua.integral,
               ua.steam_url                                             steamUrl,
               ua.steam_id                                              steamId,
               ua.password,
               ua.remember_token                                        rememberToken,
               ua.promotion_level                                       promotionLevel,
               ua.vip_level                                             vipLevel,
               ua.is_recharge                                           isRecharge,
               ua.total_recharge                                        totalRecharge,
               ua.close_gift                                            closeGift,
               ua.ban_pick_up                                           banPickUp,
               ua.anchor,
               ua.new_welfare                                           newWelfare,
               ua.box_key_total                                         boxKeyTotal,
               ua.reward_new_user                                       rewardNewUser,
               ua.is_adult                                              isAdult,
               ua.real_name                                             realName,
               ua.id_number                                             idNumber,
               ua.set_invite_code_num                                   setInviteCodeNum,
               ua.created_at                                            createdAt,
               ua.updated_at                                            updatedAt
        from users ua
        where ua.`name` = #{name}
    </select>
    <select id="queryUserByInviteCode" parameterType="java.lang.String" resultType="com.example.demo.entity.User">
        select ua.id,
               ua.`name`,
               ua.mobile,
               CONCAT(LEFT(ua.mobile,3), '****', RIGHT(ua.mobile,4)) AS mobileHide,
               ua.invite_code                                           inviteCode,
               ua.avatar,
               ua.inviter_id                                            inviterId,
               ua.be_invite_number                                      beInviteNumber,
               ua.email_verified_at                                     emailVerifiedAt,
               ua.bean,
               ua.silver,
               ua.integral,
               ua.steam_url                                             steamUrl,
               ua.steam_id                                              steamId,
               ua.password,
               ua.remember_token                                        rememberToken,
               ua.promotion_level                                       promotionLevel,
               ua.vip_level                                             vipLevel,
               ua.is_recharge                                           isRecharge,
               ua.total_recharge                                        totalRecharge,
               ua.close_gift                                            closeGift,
               ua.ban_pick_up                                           banPickUp,
               ua.anchor,
               ua.new_welfare                                           newWelfare,
               ua.box_key_total                                         boxKeyTotal,
               ua.reward_new_user                                       rewardNewUser,
               ua.is_adult                                              isAdult,
               ua.real_name                                             realName,
               ua.id_number                                             idNumber,
               ua.set_invite_code_num                                   setInviteCodeNum,
               ua.created_at                                            createdAt,
               ua.updated_at                                            updatedAt
        from users ua
        where ua.invite_code = #{inviteCode} limit 1
    </select>
    <insert id="register" parameterType="com.example.demo.dto.UserRegisterDto">
        insert into users(`name`,
                          mobile,
                          invite_code,
                          inviter_id,
                          password,
                          bean,
                          created_at)
        values (#{name},
                #{mobile},
                #{inviteCode},
                #{inviterId},
                #{password},
                #{bean},
                now())
    </insert>

    <update id="updateBean">
        update users
        <set>
            bean = #{balance}
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    <update id="updateSilver">
        update users
        <set>
            silver = #{balance}
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <update id="resetCache">
        update box_awards
        set real_odds_leave=real_odds,
            anchor_odds_leave= anchor_odds,
            luck_odds_leave=luck_odds
        where 1 = 1
    </update>
    <update id="sendReward" parameterType="java.lang.Integer">
        update users
        set bean=bean + 0.01
        where id = #{userId}
    </update>

    <update id="updatePwd">
        update users
        set password =#{pwd}
        where id = #{id}
    </update>
    <insert id="exchangeDetail" parameterType="com.example.demo.entity.UserExchangeDetail">
        insert into user_exchange_detail(`type`,
                                         user_id,
                                         bean,
                                         create_time)
        values (#{type},
                #{userId},
                #{bean},
                now())
    </insert>
</mapper>