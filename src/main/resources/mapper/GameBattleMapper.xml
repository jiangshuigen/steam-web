<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.GameBattleMapper">
    <resultMap id="GameResultMap" type="com.example.demo.dto.GameArenasDto">
        <id property="id" column="id"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="userNum" column="user_num"/>
        <result property="boxNum" column="box_num"/>
        <result property="totalBean" column="total_bean"/>
        <result property="status" column="status"/>
        <result property="winUserId" column="win_user_id"/>
        <result property="drawCode" column="draw_code"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="userName" column="userName"/>
        <result property="avatar" column="avatar"/>
        <result property="anchor" column="anchor"/>
        <collection property="listBox" ofType="com.example.demo.dto.GameArenasBoxDto" select="selectBoxs" column="id">
            <result property="boxId" column="boxId"/>
            <result property="boxName" column="boxName"/>
            <result property="intactCover" column="intactCover"/>
            <result property="arenaBoxId" column="arenaBoxId"/>
        </collection>
        <collection property="listUser" ofType="com.example.demo.dto.GameArenasUserDto" select="selectUsers"
                    column="id">
            <id property="gameUserId" column="gameUserId"/>
            <result property="seat" column="seat"/>
            <result property="gameUserName" column="gameUserName"/>
            <result property="gameAvatar" column="gameAvatar"/>
            <result property="gameBean" column="gameBean"/>
        </collection>
    </resultMap>
    <resultMap id="BoxResultMap" type="com.example.demo.dto.GameArenasBoxDto">
        <result property="boxId" column="boxId"/>
        <result property="boxName" column="boxName"/>
        <result property="intactCover" column="intactCover"/>
        <result property="arenaBoxId" column="arenaBoxId"/>
    </resultMap>
    <resultMap id="UserResultMap" type="com.example.demo.dto.GameArenasUserDto">
        <id property="gameUserId" column="gameUserId"/>
        <result property="gameUserName" column="gameUserName"/>
        <result property="gameAvatar" column="gameAvatar"/>
        <result property="gameBean" column="gameBean"/>
    </resultMap>
    <insert id="createEvent" parameterType="com.example.demo.dto.GameArenasSaveDto" useGeneratedKeys="true"
            keyProperty="id">
          insert into game_arenas(
            create_user_id,
            user_num,
            box_num,
            total_bean,
            status,
            created_at,
            updated_at
          )values(
            #{createUserId},
            #{userNum},
            #{boxNum},
            #{totalBean},
            0,
            now(),
            now()
          )
    </insert>
    <insert id="insertArenaBox" parameterType="com.example.demo.entity.GameArenaBox">
        insert into game_arena_box (
            game_arena_id,
            box_id,
            created_at,
            updated_at
        )values(
            #{gameArenaId},
            #{boxId},
            now(),
            now()
        )
    </insert>
    <insert id="insertArenaUsers" parameterType="com.example.demo.entity.GameArenaUsers">
        insert into game_arena_users(
            game_arena_id,
            user_id,
            seat,
            worth,
            created_at,
            updated_at
        )values(
            #{gameArenaId},
            #{userId},
            #{seat},
            #{worth},
            now(),
            now()
        )
    </insert>
    <sql id="Base_Column_List">
        select
                ga.id,
                ga.create_user_id ,
                ga.user_num ,
                ga.box_num ,
                ga.total_bean,
                ga.status,
                ga.win_user_id ,
                ga.draw_code ,
                ga.created_at ,
                ga.updated_at ,
                u.name as userName,
                u.avatar as avatar,
                u.anchor as anchor
    </sql>
    <select id="getBattleList" resultMap="GameResultMap" parameterType="com.example.demo.dto.BasePage">
        <include refid="Base_Column_List"></include>
        from game_arenas ga
        left join users u on u.id = ga.create_user_id
        where ga.status=2
        order by ga.created_at desc
    </select>
    <select id="getTotalBean" resultType="java.math.BigDecimal">
        select bean from boxs
        where id = #{id}
    </select>
    <select id="selectBoxs" resultMap="BoxResultMap" parameterType="java.lang.Integer">
        select
        bx.id as boxId,
        bx.name as boxName,
        bx.intact_cover as intactCover,
        ab.id as arenaBoxId
        from game_arena_box ab
        inner join boxs bx on ab.box_id = bx.id
        where ab.game_arena_id = #{id}
    </select>
    <select id="selectUsers" resultMap="UserResultMap" parameterType="java.lang.Integer">
        select
        guu.id as gameUserId,
        gu.seat as seat,
        guu.name as gameUserName,
        guu.avatar as gameAvatar,
        guu.bean as gameBean
       from  game_arena_users gu
        inner join users guu on guu.id = gu.user_id
        where gu.game_arena_id = #{id}
        order by gu.seat
    </select>
    <select id="getMyBattleList" resultMap="GameResultMap" parameterType="com.example.demo.dto.BattleQuery">
        select
        ga.id,
        ga.create_user_id ,
        ga.user_num ,
        ga.box_num ,
        ga.total_bean,
        ga.status,
        ga.win_user_id ,
        ga.draw_code ,
        ga.created_at ,
        ga.updated_at ,
        u.name as userName,
        u.avatar as avatar,
        u.anchor as anchor
        from game_award_records gar
        inner join game_arenas ga on ga.id = gar.game_arena_id and ga.status=2
        left join users u on u.id = ga.create_user_id
        <where>
            <if test="userId>0">
                and gar.user_id =#{userId}
            </if>
        </where>
        order by ga.status ,ga.created_at desc
    </select>
    <select id="getEventList" resultMap="GameResultMap">
        <include refid="Base_Column_List"></include>
        from game_arenas ga
        left join users u on u.id = ga.create_user_id
        <where>
            <if test="status !=null">
                ga.status = #{status}
            </if>
        </where>
        order by ga.status ,ga.created_at desc
    </select>
    <select id="getGameArenasDetail" resultMap="GameResultMap" parameterType="java.lang.Integer">
              select
                ga.id,
                ga.create_user_id ,
                ga.user_num ,
                ga.box_num ,
                ga.total_bean,
                ga.status,
                ga.win_user_id ,
                ga.draw_code ,
                ga.created_at ,
                ga.updated_at ,
                u.name as userName,
                u.avatar as avatar,
                u.anchor as anchor
           from  game_arenas ga
           left join users u on u.id = ga.create_user_id
           where ga.id = #{id}
    </select>
    <update id="update" parameterType="com.example.demo.dto.GameArenasDto">
          update game_arenas
          set win_user_id =#{winUserId},
          draw_code=#{drawCode},
          status =#{status},
          updated_at = now()
          where id =#{id}
    </update>
    <insert id="saveGameAwardRecords" parameterType="com.example.demo.entity.GameAwardRecords">
        insert into game_award_records (
        game_arena_id,
        user_id,
        award_id,
        status,
        created_at,
        updated_at
        )values
        <foreach collection="records" item="item" separator=",">
            (
            #{item.gameArenaId},
            #{item.userId},
            #{item.awardId},
            #{item.status},
            now(),
            now()
            )
        </foreach>
    </insert>

    <select id="queryRankUserList" resultType="com.example.demo.entity.GameRanking" parameterType="java.lang.Integer">
         select  id,
            user_id as userId,
            total,
            win,
            fail,
            win_rate as winRate,
            expend,
            income,
            lost_bean as lostBean,
            `date`
          from  game_ranking
          where  user_id =#{userId}
          and `date` = DATE_FORMAT(now(),'%Y-%m-%d')
          limit 1
    </select>

    <update id="updateRanking" parameterType="com.example.demo.entity.GameRanking">
        update game_ranking
        set total=#{total},
             win=#{win},
             fail=#{fail},
             win_rate=#{winRate},
             expend=#{expend},
             income=#{income},
             lost_bean=#{lostBean}
             where id =#{id}
    </update>

    <insert id="saveRanking" parameterType="com.example.demo.entity.GameRanking">
        insert into game_ranking(
            user_id,
            total,
            win,
            fail,
            win_rate,
            expend,
            income,
            lost_bean,
            `date`
        )values(
            #{userId},
            #{total},
            #{win},
            #{fail},
            #{winRate},
            #{expend},
            #{income},
            #{lostBean},
            DATE_FORMAT(now(),'%Y-%m-%d')
        )
    </insert>

    <select id="getGameRankingList" parameterType="com.example.demo.dto.GameRankingQuery"
            resultType="com.example.demo.entity.GameRanking">
        select rk.id,
        rk.user_id as userId,
        u.name as userName,
        u.avatar as avatar,
        rk.total,
        rk.win,
        rk.fail,
        rk.win_rate as winRate,
        rk.expend,
        rk.income,
        rk.lost_bean as lostBean,
        rk.`date`
        from game_ranking rk
        left join users u on u.id = rk.user_id
        <where>
            <if test="dateType>0 and dateType==1">
                rk.`date` = DATE_FORMAT(now(),'%Y-%m-%d')
            </if>
            <if test="dateType>0 and dateType==2">
                rk.`date` = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y-%m-%d')
            </if>
        </where>
        <if test="type == 1">
            order by rk.expend desc
        </if>
        <if test="type == 2">
            order by rk.win_rate desc
        </if>
        limit #{size}
    </select>

    <select id="queryYestdayStar" parameterType="com.example.demo.dto.GameRankingQuery"
            resultType="com.example.demo.dto.GameRankingDto">
        select rk.id,
        rk.user_id as userId,
        u.name as userName,
        u.avatar as avatar,
        rk.total,
        rk.win,
        rk.fail,
        rk.win_rate as winRate,
        rk.expend,
        rk.income,
        rk.lost_bean as lostBean,
        rk.`date`
        from game_ranking rk
        left join users u on u.id = rk.user_id
        where rk.`date` = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y-%m-%d')
        <if test="type == 1">
            order by rk.expend desc
        </if>
        <if test="type == 2">
            order by rk.win_rate desc
        </if>
        limit 1
    </select>

    <select id="getBoxRecordList" parameterType="java.lang.Integer" resultType="com.example.demo.entity.BoxRecords">
      select
        re.id,
        u.id as getUserId,
        u.id as userId,
        u.name as userName,
        u.avatar,
        re.`name`,
        re.hash_name as hashName,
        re.cover,
        re.dura,
        re.lv,
        re.bean,
        gar.award_id as  boxAwardId,
        re.created_at as createdAt,
        (select uu.id from game_arena_users uu where uu.game_arena_id =718 and uu.user_id = gar.user_id) as sortId
        from game_award_records gar
        left join box_awards re on gar.award_id = re.id
        left join users u on gar.user_id = u.id
        where gar.game_arena_id = #{id}
        order by sortId
    </select>

    <update id="updateUserWin" parameterType="java.lang.Integer">
        update game_arena_users
         set is_win =1
         where game_arena_id = #{id}
         and user_id = #{win}
    </update>
    <delete id="deleteBattleById" parameterType="java.lang.Integer">
         call deleteBattleById(#{battleId})
    </delete>
</mapper>